version: '3.7'

volumes:
  pgdata:
  pgadmin_data:

services:
  traefik:
    image: traefik:v2.6.0
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8085:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/conf.d:/etc/traefik/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https"

  server:
    build:
      context: ./iot-vega-server
    restart: always
    depends_on:
      - pg
    ports:
      - "8001:8001/udp"
      - "8002:8002"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-ws.rule=Host(`vega-server.ziondev.ru`)"
      - "traefik.http.routers.server-ws.service=server-ws-service"
      - "traefik.http.routers.server-ws.middlewares=server-cors"

      - "traefik.http.routers.server-ws-tls.rule=Host(`vega-server.ziondev.ru`)"
      - "traefik.http.routers.server-ws-tls.tls.certResolver=default"
      - "traefik.http.routers.server-ws-tls.service=server-ws-service"
      - "traefik.http.routers.server-ws-tls.middlewares=server-cors"

      - "traefik.http.services.server-ws-service.loadbalancer.server.port=8002"

      - "traefik.http.middlewares.server-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,HEAD"
      - "traefik.http.middlewares.server-cors.headers.accesscontrolalloworiginlist=https://vega-admin.ziondev.ru,https://vega-pulse.ziondev.ru,http://vega-admin.ziondev.ru,http://vega-pulse.ziondev.ru"
      - "traefik.http.middlewares.server-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.server-cors.headers.addvaryheader=true"

  pg:
    image: 'postgres:14.2-alpine'
    restart: always
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD
      - CUSTOM_POSTGRES_DB
      - CUSTOM_POSTGRES_USER

  admin-tool:
    build:
      context: ./iot-vega-admin
    restart: always
    depends_on:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin-tool.rule=Host(`admin-tool.local`) || Host(`vega-admin.ziondev.ru`)"
      - "traefik.http.routers.admin-tool.service=admin-tool-service"
      - "traefik.http.routers.admin-tool.middlewares=redirect-to-https"

      - "traefik.http.routers.admin-tool-tls.rule=Host(`vega-admin.ziondev.ru`)"
      - "traefik.http.routers.admin-tool-tls.tls.certResolver=default"
      - "traefik.http.routers.admin-tool-tls.service=admin-tool-service"

      - "traefik.http.services.admin-tool-service.loadbalancer.server.port=80"

  pulse:
    build:
      context: ./iot-vega-pulse
    restart: always
    depends_on:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pulse.rule=Host(`pulse.local`) || Host(`vega-pulse.ziondev.ru`)"
      - "traefik.http.routers.pulse.service=pulse-service"
      - "traefik.http.routers.pulse.middlewares=redirect-to-https"

      - "traefik.http.routers.pulse-tls.rule=Host(`vega-pulse.ziondev.ru`)"
      - "traefik.http.routers.pulse-tls.tls.certResolver=default"
      - "traefik.http.routers.pulse-tls.service=pulse-service"

      - "traefik.http.services.pulse-service.loadbalancer.server.port=80"

  pgadmin:
    image: dpage/pgadmin4:6.8
    restart: always
    mem_limit: 300m
    memswap_limit: 1g
    cpu_shares: 2
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_servers.json:/pgadmin4/servers.json
    depends_on:
      - pg
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_DISABLE_POSTFIX=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.local`) || Host(`vega-pgadmin.ziondev.ru`)"
      - "traefik.http.routers.pgadmin.service=pgadmin-service"
      - "traefik.http.routers.pgadmin.middlewares=redirect-to-https"

      - "traefik.http.routers.pgadmin-tls.rule=Host(`vega-pgadmin.ziondev.ru`)"
      - "traefik.http.routers.pgadmin-tls.tls.certResolver=default"
      - "traefik.http.routers.pgadmin-tls.service=pgadmin-service"

      - "traefik.http.services.pgadmin-service.loadbalancer.server.port=80"


  time-corrector:
    build: ./IotVegaTimeCorrector
    restart: always
    init: true
    mem_limit: 300m
    memswap_limit: 1g
    cpu_shares: 2
    volumes:
      - ./time-corrector.config.ini:/app/config.ini

  restic-pg:
    build: ./restic-pg-dump-docker
    restart: always
    cpus: 2.5
    volumes:
      - ~/.ssh:/root/.ssh:ro
    environment:
      - RESTIC_PASSWORD
      - RESTIC_REPOSITORY
#      - RESTIC_TAG=postgres-data
      - BACKUP_SCHEDULE=20 0 * * * # time in UTC
      - PRUNE_SCHEDULE=10 3 * * * # time in UTC
      - PGHOST=pg
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGUSER=${CUSTOM_POSTGRES_USER}
#      - RESTIC_KEEP_HOURLY=24
      - RESTIC_KEEP_DAILY=14
      - RESTIC_KEEP_WEEKLY=6
      - RESTIC_KEEP_MONTHLY=12

  restic:
    image: lobaro/restic-backup-docker:1.3.1-0.9.6
    init: true
    restart: always
    cpus: 2.5
    volumes:
      - $PWD:/data:ro
      - ~/.ssh:/root/.ssh:ro
    environment:
      - RESTIC_PASSWORD
      - RESTIC_REPOSITORY
      - RESTIC_TAG=iot-vega-src
      - BACKUP_CRON=34 1 * * * # time in UTC
      - RESTIC_FORGET_ARGS=--keep-daily 14 --keep-weekly 6 --keep-monthly 12 --keep-yearly 10

